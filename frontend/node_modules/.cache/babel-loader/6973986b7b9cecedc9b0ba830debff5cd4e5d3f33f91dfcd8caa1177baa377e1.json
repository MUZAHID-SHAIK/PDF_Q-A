{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skmuz\\\\OneDrive\\\\Desktop\\\\pdf_qa_app\\\\frontend\\\\src\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { uploadPDF } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload({\n  onUpload\n}) {\n  _s();\n  const [file, setFile] = useState();\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    setLoading(true);\n    try {\n      const res = await uploadPDF(file);\n      onUpload(res.id);\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"cvD1ym1PRHNUK3FJXgzWOcn5wAw=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","uploadPDF","jsxDEV","_jsxDEV","Upload","onUpload","_s","file","setFile","loading","setLoading","handleSubmit","e","preventDefault","res","id","alert","message","onSubmit","children","type","accept","onChange","target","files","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/skmuz/OneDrive/Desktop/pdf_qa_app/frontend/src/Upload.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { uploadPDF } from \"./api\";\n\nfunction Upload({ onUpload }) {\n  const [file, setFile] = useState();\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!file) return;\n    setLoading(true);\n    try {\n      const res = await uploadPDF(file);\n      onUpload(res.id);\n    } catch (e) {\n      alert(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" accept=\".pdf\" onChange={e => setFile(e.target.files[0])} />\n      <button type=\"submit\" disabled={loading}>{loading ? \"Uploading...\" : \"Upload\"}</button>\n    </form>\n  );\n}\nexport default Upload;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,MAAMA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE;IACXG,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,GAAG,GAAG,MAAMb,SAAS,CAACM,IAAI,CAAC;MACjCF,QAAQ,CAACS,GAAG,CAACC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOH,CAAC,EAAE;MACVI,KAAK,CAACJ,CAAC,CAACK,OAAO,CAAC;IAClB,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EACD,oBACEP,OAAA;IAAMe,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEV,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACW,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EzB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAACS,QAAQ,EAAEpB,OAAQ;MAAAU,QAAA,EAAEV,OAAO,GAAG,cAAc,GAAG;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEX;AAACtB,EAAA,CAtBQF,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAuBf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}